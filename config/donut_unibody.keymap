#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <32 33 34>;
        };

        bluetoothcombo {
            bindings = <&mo 4>;
            key-positions = <35 36 37>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 11 12 13 14 15 22 23 24 25 26 32 33 34 35 36 37 10>;
            require-prior-idle-ms = <150>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <32 33 34 35 36 37 5 6 7 8 9 16 17 18 19 20 21 27 28 29 30 31 35 36 37>;
            require-prior-idle-ms = <150>;
        };

        strg_dance: strg_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "STRG_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LSHFT>;
        };

        shift_dance: shift_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_DANCE";
            #binding-cells = <0>;
            bindings = <&kp RSHFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1
&kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1
&kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1
                            &kp NUMBER_1  &kp NUMBER_1                                                                        &kp NUMBER_1  &kp NUMBER_1
                                          &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1  &kp NUMBER_1
            >;
        };
    };
};
