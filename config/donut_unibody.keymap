#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <32 33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp X     &kp V          &kp L             &kp C          &kp W        &kp K  &kp H      &kp G      &kp F       &kp Q
            &kp U     &kp I          &kp A             &kp E          &kp O        &kp S  &kp N      &kp R      &kp T       &kp D
&kp ESCAPE  &kp LBRC  &kp SEMICOLON  &kp SINGLE_QUOTE  &kp P          &kp Y        &kp B  &kp M      &kp COMMA  &kp PERIOD  &kp J  &kp Z
                                     &kp KP_N2         &kp BACKSPACE  &kp SPACE    &mo 1  &kp ENTER  &kp KP_N2
            >;
        };

        symbol_layer {
            bindings = <
            &kp RA(E)      &kp LS(SLASH)  &kp RA(N8)    &kp RA(N9)    &kp GRAVE        &kp LS(NUMBER_1)  &kp NUBS    &kp LS(NUBS)  &kp LS(N0)    &kp LS(N6)
            &kp RA(MINUS)  &kp LS(N7)     &kp RA(N7)    &kp RA(N0)    &kp RS(RBRC)     &kp LS(MINUS)     &kp LS(N8)  &kp LS(N9)    &kp SLASH     &kp LS(DOT)
&kp DELETE  &kp NUHS       &kp LS(N4)     &kp RA(NUBS)  &kp RA(RBRC)  &kp LS(EQUAL)    &kp LS(N5)        &kp RBRC    &kp LS(N2)    &kp LS(NUHS)  &kp LS(COMMA)  &kp RA(Q)
                                          &trans        &trans        &trans           &trans            &trans      &trans
            >;
        };

        bt_layer {
            bindings = <
           &bootloader  &none         &none         &kp KP_N2     &kp KP_N2    &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2
           &none        &none         &bt BT_CLR    &kp KP_N2     &kp KP_N2    &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2
&kp KP_N2  &kp KP_N2    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp KP_N2    &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2  &kp KP_N2
                                      &kp KP_N2     &kp KP_N2     &kp KP_N2    &kp KP_N2  &kp KP_N2  &kp KP_N2
            >;
        };
    };
};
